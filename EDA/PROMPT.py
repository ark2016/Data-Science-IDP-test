
prompt_v1 = '''Ты выполняешь задачу **распознавания именованных сущностей (NER)score_fn.
На вход ты получаешь текст <text> (и опционально его id `text_id` <text_id>).
Нужно выделить все именованные сущности и классифицировать их по категориям <category>:
<category>
* `PER` — персона (люди, семьи, вымышленные персонажи и объединённые группы)
* `ORG` — организация (компании, партии, команды, университеты, СМИ и т.п.)
* `LOC` — локация (страны, города, регионы, географические объекты, здания и т.п.)
* `EVT` — событие (войны, катастрофы, праздники, конференции и т.п.)
* `PRO` — продукт (фильмы, книги, ПО, соцсети, автомобили и т.п.)
</category>

<Procedure>
Порядок действий:
1. Прочитай весь текст.
2. Найди score_fnвсе упоминанияscore_fn именованных сущностей.
3. Для каждой — определи её тип (`PER`, `ORG`, `LOC`, `EVT`, `PRO`).
4. Сохрани результат через функцию `add_json_function`
</Procedure>

<examples>
<example1>
    Пример 1
    Вход:

    ```
    text_id: ru-10  
    text: Тереза Мэй рассчитывает усидеть в седле до завершения Brexit.  
    По мнению Бориса Джонсона, Британия окажется в кризисе.
    ```

    Выход:

    ```
    ru-10
    | Тереза Мэй       | PER |
    | Brexit           | EVT |
    | Бориса Джонсона  | PER |
    | Британия         | LOC |
    ```
</example1>

<example2>
    Пример 2**
    Вход:

    ```
    text: В Лондоне прошёл концерт группы Coldplay.
    ```

    Выход:

    ```
    no-id
    | Лондоне   | LOC |
    | Coldplay  | ORG |
    ```
</example2>
</examples>
'''

prompt_v2 = """
Ты выполняешь задачу **распознавания именованных сущностей (NER)**.

<TASK>
На вход ты получаешь текст <text> (и опционально его id <text_id>).
Нужно извлечь все именованные сущности и классифицировать их по категориям:
- PER — персона (люди, семьи, вымышленные персонажи и группы)
- ORG — организация (компании, партии, команды, университеты, СМИ и т.п.)
- LOC — локация (страны, города, регионы, географические объекты, здания и т.п.)
- EVT — событие (войны, катастрофы, праздники, конференции и т.п.)
- PRO — продукт (фильмы, книги, ПО, соцсети, автомобили и т.п.)
</TASK>

<PROCEDURE>
1. Прочитай весь текст целиком.
2. Найди все упоминания сущностей (без выдумывания).
3. Определи их тип (PER, ORG, LOC, EVT, PRO).
4. Верни результат через вызов функции `add_json_elements` с параметрами:
   - json_data="{}"
   - fields=["PER","ORG","LOC","EVT","PRO"]
   - values=[списки найденных сущностей для каждого типа, в том же порядке]
</PROCEDURE>

<EXAMPLES>
Пример 1:
Вход:
text_id: ru-10
text: Тереза Мэй рассчитывает усидеть в седле до завершения Brexit.
       По мнению Бориса Джонсона, Британия окажется в кризисе.

Ожидаемый результат вызова:
add_json_elements(
  json_data="{}",
  fields=["PER","ORG","LOC","EVT","PRO"],
  values=[
    ["Тереза Мэй","Бориса Джонсона"],  # PER
    [],                                # ORG
    ["Британия"],                      # LOC
    ["Brexit"],                        # EVT
    []                                 # PRO
  ]
)

Пример 2:
Вход:
text: В Лондоне прошёл концерт группы Coldplay.

Ожидаемый результат вызова:
add_json_elements(
  json_data="{}",
  fields=["PER","ORG","LOC","EVT","PRO"],
  values=[
    [],                   # PER
    ["Coldplay"],         # ORG
    ["Лондоне"],          # LOC
    [],                   # EVT
    []                    # PRO
  ]
)
</EXAMPLES>
"""

prompt_v3 = """
Ты выполняешь задачу **распознавания именованных сущностей (NER)**.

<TASK>
На вход ты получаешь текст <text> (и опционально его id <text_id>).
Нужно извлечь все именованные сущности и классифицировать их по категориям:
- PER — персона (люди, семьи, вымышленные персонажи и группы)
- ORG — организация (компании, партии, команды, университеты, СМИ и т.п.)
- LOC — локация (страны, города, регионы, географические объекты, здания и т.п.)
- EVT — событие (войны, катастрофы, праздники, конференции и т.п.)
- PRO — продукт (фильмы, книги, ПО, соцсети, автомобили и т.п.)
</TASK>

<PROCEDURE>
1. Прочитай весь текст целиком.
2. Найди все упоминания сущностей (без выдумывания).
3. Определи их тип (PER, ORG, LOC, EVT, PRO).
4. Верни результат через вызов функции `add_json_elements` с параметрами:
   - json_data="{}"
   - fields=["PER","ORG","LOC","EVT","PRO"]
   - values=[списки найденных сущностей для каждого типа, в том же порядке]
</PROCEDURE>
"""

prompt_v4 = """
Ты выполняешь задачу **распознавания именованных сущностей (NER)**.

<TASK>
На вход ты получаешь текст <text> (и опционально его id <text_id>).
Нужно извлечь все именованные сущности и классифицировать их по категориям:
- PER — персона (люди, семьи, вымышленные персонажи и группы)
- ORG — организация (компании, партии, команды, университеты, СМИ и т.п.)
- LOC — локация (страны, города, регионы, географические объекты, здания и т.п.)
- EVT — событие (войны, катастрофы, праздники, конференции и т.п.)
- PRO — продукт (фильмы, книги, ПО, соцсети, автомобили и т.п.)
</TASK>

<PROCEDURE>
1. Прочитай весь текст целиком.
2. Найди все упоминания сущностей (без выдумывания).
3. Определи их тип (PER, ORG, LOC, EVT, PRO).
4. Верни результат через вызов функции `add_json_elements` с параметрами:
   - json_data="{}"
   - fields=["PER","ORG","LOC","EVT","PRO"]
   - values=[списки найденных сущностей для каждого типа, в том же порядке]
</PROCEDURE>

<EXAMPLES>
  <text>
15:30 Моравецкий назвал "Северный поток-2" проектом для шантажа

Премьер-министр Польши считает, что проект строительства российского представляет собой пример непоследовательности ЕС. 
Премьер-министр Польши Матеуш Моравецкий считает, что проект строительства российского газопровода "Северный поток-2" 
представляет собой пример непоследовательности Европейского союза. Об этом сообщает РБК-Украина со ссылкой на его интервью 
американскому каналу CNBC. Политик заявил, что газопровод "Северный поток-2" - "антиевропейский, и это еще один пример того, 
как к государствам относятся по-разному в похожих ситуациях". Моравецкий напомнил, что несколько лет назад Европейской комиссией 
"по ряду соображений" была заблокирована реализация проекта "Южный поток". Однако сейчас "в контексте "Северного потока-2" 
все те же аргументы были восприняты положительно". Премьер-министр страны считает, что "проект является инструментом России 
для того, чтобы "шантажировать Украину и Польшу". Напомним, ранее министр иностранных дел Польши Яцек Чапутович заявил, что 
строительство газопровода "Северный поток-2" угрожает национальной безопасности Украины и лишает ее защиты перед очередной 
российской агрессией. Президент Польши Анджей Дуда заявил, что санкции против Российской Федерации необходимо оставить и 
усилить после детального анализа. Он отметил, что не понимает поддержку строительства газопровода "Северный поток-2" и все 
время дискутирует из-за этого со своими европейскими коллегами.
  </text>

  <result>
"Северного потока-2"	PRO
"Северный поток-2"	PRO
"Южный поток"	PRO	
CNBC		PRO	
Анджей Дуда	PER	
ЕС	ORG	
Европейского союза	ORG	
Европейской комиссией	ORG
Матеуш Моравецкий	PER
Моравецкий	PER	
Польши	LOC	
Польшу	LOC	
РБК-Украина	ORG	
России	LOC	
Российской Федерации	LOC
Украину	LOC	
Украины	LOC	
Яцек Чапутович	PER	
  </result>
</EXAMPLES>

---

используй функцию для сохранения данных. 
Не возвращай текст, возвращай id текста
"""

prompt_v5 = '''<PROCEDURE>
1. Прочитай весь текст целиком.
2. Найди все упоминания сущностей (без выдумывания).
3. Определи их тип (PER, ORG, LOC, EVT, PRO).
4. Верни результат через вызов функции `add_json_elements` с параметрами:
   - json_data="{}"
   - fields=["PER","ORG","LOC","EVT","PRO"]
   - values=[списки найденных сущностей для каждого типа, в том же порядке]

ВАЖНО: Сущности должны быть чистыми строками без дополнительных разделителей или меток типа.
</PROCEDURE>

<EXAMPLES>
  <text>
15:30 Моравецкий назвал "Северный поток-2" проектом для шантажа

Премьер-министр Польши считает, что проект строительства российского представляет собой пример непоследовательности ЕС. 
Премьер-министр Польши Матеуш Моравецкий считает, что проект строительства российского газопровода "Северный поток-2" 
представляет собой пример непоследовательности Европейского союза. Об этом сообщает РБК-Украина со ссылкой на его интервью 
американскому каналу CNBC. Политик заявил, что газопровод "Северный поток-2" - "антиевропейский, и это еще один пример того, 
как к государствам относятся по-разному в похожих ситуациях". Моравецкий напомнил, что несколько лет назад Европейской комиссией 
"по ряду соображений" была заблокирована реализация проекта "Южный поток". Однако сейчас "в контексте "Северного потока-2" 
все те же аргументы были восприняты положительно". Премьер-министр страны считает, что "проект является инструментом России 
для того, чтобы "шантажировать Украину и Польшу". Напомним, ранее министр иностранных дел Польши Яцек Чапутович заявил, что 
строительство газопровода "Северный поток-2" угрожает национальной безопасности Украины и лишает ее защиты перед очередной 
российской агрессией. Президент Польши Анджей Дуда заявил, что санкции против Российской Федерации необходимо оставить и 
усилить после детального анализа. Он отметил, что не понимает поддержку строительства газопровода "Северный поток-2" и все 
время дискутирует из-за этого со своими европейскими коллегами.
  </text>

  <result>
  Функция должна быть вызвана с такими параметрами:
  - json_data="{}"
  - fields=["PER","ORG","LOC","EVT","PRO"]  
  - values=[
      ["Матеуш Моравецкий", "Моравецкий", "Яцек Чапутович", "Анджей Дуда"],
      ["ЕС", "Европейского союза", "Европейской комиссией", "РБК-Украина"],
      ["Польши", "России", "Украину", "Украины", "Польшу", "Российской Федерации"],
      [],
      ["Северный поток-2", "Северного потока-2", "Южный поток", "CNBC"]
    ]
  
  Результирующий JSON будет выглядеть как:
  {
    "fields": ["PER","ORG","LOC","EVT","PRO"],
    "values": [
      ["Матеуш Моравецкий", "Моравецкий", "Яцек Чапутович", "Анджей Дуда"],
      ["ЕС", "Европейского союза", "Европейской комиссией", "РБК-Украина"],
      ["Польши", "России", "Украину", "Украины", "Польшу", "Российской Федерации"],
      [],
      ["Северный поток-2", "Северного потока-2", "Южный поток", "CNBC"]
    ]
  }
  </result>
</EXAMPLES>

---

Используй функцию для сохранения данных. 
Не возвращай текст, возвращай только id текста.
'''
